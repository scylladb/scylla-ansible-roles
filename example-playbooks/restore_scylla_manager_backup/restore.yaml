---

- name: Gather important facts about Scylla nodes and a snapshot
  hosts: all
  become: true
  gather_facts: false
  tags:
    - gather_facts
  tasks:
    - name: Get seeds list
      shell: |
        grep '\- seeds:' /etc/scylla/scylla.yaml | awk '{ print $NF }' | tr -d '"' | tr -d "'"
      register: _seeds

    - name: Save seeds list as a fact
      set_fact:
        old_seeds: "{{ _seeds.stdout }}"

    - name: Get listen address
      shell: |
        grep "^\s*listen_address" /etc/scylla/scylla.yaml | cut -d":" -f2 | tr -d ' '
      register: _listen_address

    - name: Save listen_address as a fact
      set_fact:
        listen_address: "{{ _listen_address.stdout }}"

    - name: Get names of the tables in the snapshot {{ snapshot_tag }}
      shell: |
        scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} --dump-manifest 2>/dev/null | jq -r '.index[] | [.keyspace,.table] | join(".")'
      register: _tables_list
      changed_when: false

    - name: Save tables names list as a fact
      set_fact:
        all_tables: "{{ _tables_list.stdout.split('\n') }}"

    - name: Save names of tables to restore as a fact
      set_fact:
        tables_to_restore: "{{ all_tables | reject('search', '^system(_|\\.)') | list }}"

    - name: Get initial token
      shell: |
        scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} --dump-tokens
      register: _initial_token

    - name: Set initial_token in scylla.yaml
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(#\s*)?initial_token:'
        line: "initial_token: {{ _initial_token.stdout }}"
        create: yes

    - name: Make {{ groups.all[0] }} a seed
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ groups.all[0] }}
        backrefs: yes
      when: inventory_hostname == groups.all[0]

    - name: Set seeds list to be {{ groups.all[0] }} plus a node itself
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ groups.all[0] }},{{ inventory_hostname }}
        backrefs: yes
      when: inventory_hostname != groups.all[0]

- name: Start all nodes serially
  hosts: all
  become: true
  gather_facts: false
  serial: 1
  tags:
    - restore_token_ring
  tasks:
    - name: Stop all nodes serially
      tags:
        - prep_nodes
      block:
        - name: Stop Scylla service
          service:
            name: scylla-server
            state: stopped

    - name: Start Scylla service on {{ inventory_hostname }}
      service:
        name: scylla-server
        state: started

    - name: Wait for CQL port on {{ inventory_hostname }}
      wait_for:
        port: 9042
        host: "{{ listen_address }}"

- name: Restore schema from a backup snapshot {{ snapshot_tag }}
  hosts: all
  become: true
  gather_facts: false
  tags:
    - restore_schema_from_backup
  tasks:
    - name: Restore ScyllaDB schema from backup
      tags:
        - restore_schema
      block:
      # use ScyllaDB Manager sctool to restore schema from the backup
        - name: Run sctool restore command to restore schema only
          ansible.builtin.command:
            cmd: "sctool restore --cluster {{ cluster_name }} -L {{ backup_location }} --snapshot-tag {{ snapshot_tag }} --restore-schema"
          delegate_to: "{{ scyllamgr_host | default('localhost') }}"
          run_once: true

- name: Upload data from a backup snapshot {{ snapshot_tag }}
  hosts: all
  become: true
  gather_facts: false
  tags:
    - upload_snapshot
  tasks:
    - name: Restore
      tags:
        - restore_data
      block:
        - name: Download data
          shell: |
            sudo -u scylla scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} -d {{ data_dir }} -K '*,!system*' --mode upload
          async: 604800
          poll: 5

        - name: Load the rest of tables data from the upload directory
          shell: |
            nodetool refresh {{ item.split('.') | join(' ') }} --skip-cleanup --skip-reshape
          with_items: "{{ tables_to_restore }}"

        - name: Restart Scylla service to force a new schema to be picked up
          service:
            name: scylla-server
            state: restarted

        - name: Wait for CQL port 9042 to be open for the Scylla Seed node
          ansible.builtin.wait_for:
            host: "{{ inventory_hostname }}"
            port: 9042
            state: started
            delay: 5
            timeout: 120


- name: Cleanup - restore the original cluster's configuration
  hosts: all
  become: true
  gather_facts: false
  tags:
    - restore_token_ring
  tasks:
    - name: Delete initial_token in scylla.yaml of {{ inventory_hostname }}
      tags: cleanup
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^initial_token:'
        state: absent

    - name: Restore seeds list
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ old_seeds }}
        backrefs: yes
