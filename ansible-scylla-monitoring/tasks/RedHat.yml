---
- name: Add EPEL key
  rpm_key:
    state: present
    key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
  become: true

- name: install dependencies
  block:
  - name: install EPEL
    yum:
      name:
        - "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
      state: present
      lock_timeout: 180

  - name: install additional dependencies
    yum:
      name:
        - git
        - python3
      state: present
      lock_timeout: 180
  become: true

- name: install prerequisite python-yaml
  shell: |
    for i in `yum search python3|grep -i pyyaml|awk '{ print $1 }'`; do sudo yum -y install $i; done
  become: true

- name: run docker related tasks
  block:
    - name: remove unneeded deps
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
          - podman
          - podman-docker
        state: absent
        lock_timeout: 180

    - name: download docker-ce repo
      get_url:
        url: "https://download.docker.com/linux/centos/docker-ce.repo"
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: '0644'
        owner: root

    - name: install docker
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        lock_timeout: 180

    - name: create docker group
      group:
        name: docker
        state: present

    - name: add user to the docker group
      user:
        name: '{{ ansible_user_id }}'
        groups: docker
        append: yes

    - name: enable docker service
      service:
        name: docker
        state: started
        enabled: yes
  become: true
  when: install_type == "docker" #and ansible_distribution_major_version|int == 7

# - name: run docker related tasks for EL8
#   block:
#     - name: install podman-docker
#       package:
#         name: podman-docker
#         state: present

#     - name: remove stdout garbage from podman
#       shell: |
#         touch /etc/containers/nodocker
#   become: true
#   when: install_type == "docker" and ansible_distribution_major_version|int > 7








