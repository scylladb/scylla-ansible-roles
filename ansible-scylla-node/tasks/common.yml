---
- name: configure RAID via Scylla-setup
  block:
    - name: check for current raid
      shell: |
        C=$(cat /proc/mdstat |grep md0| wc -w)
        echo $((0 + C - 4))
      register: present_raid_disks

    - name: run raid setup
      shell: |
        scylla_raid_setup --disks "{{ scylla_raid_setup | join(',') }}" --update-fstab
      become: true
      when: scylla_raid_setup is defined and scylla_raid_setup|length > 0 and scylla_raid_setup|length != present_raid_disks.stdout|int
      ignore_errors: true

- name: IO settings probe
  block:
    - name: check for existing io_properties
      stat:
        path: /etc/scylla.d/io_properties.yaml
      register: io_prop_stat

    - name: Measure IO settings on one node
      shell: |
        scylla_io_setup
      when: io_prop_stat.stat.exists|bool == False

    - name: store /etc/scylla.d/io_properties.yaml
      shell: |
        cat /etc/scylla.d/io_properties.yaml
      register: _io_properties

    - set_fact:
        io_properties: "{{ _io_properties.stdout }}"

    - name: store /etc/scylla.d/io.conf
      shell: |
        cat /etc/scylla.d/io.conf
      register: _io_conf

    - set_fact:
        io_conf: "{{ _io_conf.stdout_lines[0] }}"
  when: scylla_io_probe|bool == True
  run_once: true
  become: true

- name: Set io.conf
  lineinfile:
    path: /etc/scylla.d/io.conf
    regexp: '^SEASTAR_IO='
    line: "{{ io_conf }}"
    create: yes
  become: true
  when: io_conf is defined

- name: Set io_properties
  template:
    src: templates/io_properties.yaml.j2
    dest: /etc/scylla.d/io_properties.yaml
    owner: root
    group: root
    mode: '0644'
  become: true

- name: configure NTP
  shell: |
    scylla_ntp_setup
  become: true

- name: node exporter setup
  shell: |
    node_exporter_install --force
  when: install_type == 'online'
  become: true
  notify:
    - node_exporter start
  ignore_errors: true
  #TODO: stop ignoring errors when the node_exporter_install script fix is available in all actual versions

- name: Populate service facts
  service_facts:
  # example output:
  #   "ansible_facts.services": {
  #     "scylla-server.service": {
  #         "name": "scylla-server.service",
  #         "source": "systemd",
  #         "state": "running",
  #         "status": "enabled"
  #     }
  #  }

- name: configure Scylla
  shell: |
    scylla_setup --no-raid-setup --nic {{ scylla_nic }} --setup-nic-and-disks --no-ec2-check --no-kernel-check --no-ntp-setup --no-io-setup --no-node-exporter --no-coredump-setup --no-sysconfig-setup
  become: true
  when: ansible_facts.services["scylla-server.service"] is defined and ansible_facts.services["scylla-server.service"]["state"] != "running"

- name: configure scylla.yaml
  template:
    src: templates/scylla.yaml.j2
    dest: /etc/scylla/scylla.yaml
    owner: root
    group: root
    mode: '0644'
  become: true

- name: configure cassandra-rackdc.properties
  template:
    src: templates/cassandra-rackdc.properties.j2
    dest: /etc/scylla/cassandra-rackdc.properties
    owner: root
    group: root
    mode: '0644'
  become: true
  when: scylla_snitch != 'SimpleSnitch' and scylla_snitch != 'RackInferringSnitch'

- name: finalize Scylla node configuration
  block:
  - name: run bootparam setup
    shell: |
      scylla_bootparam_setup

  - name: set up coredump
    shell: |
      scylla_coredump_setup --dump-to-raiddir
    when: skip_coredump is defined and skip_coredump|bool == false

  - name: configure cpu scaling
    shell: |
      scylla_cpuscaling_setup

  - name: configure fstrim
    shell: |
      scylla_fstrim_setup

  - name: configure sysconfig
    shell: |
      scylla_sysconfig_setup --setup-nic-and-disks --nic {{ scylla_nic }}
    when: skip_sysconfig is defined and skip_sysconfig|bool == false
  become: true

- name: perftune related operations
  block:
  #TODO: additional testing on Debian/Ubuntu required.
  - name: set perf_mode for 4 cores or less
    set_fact:
      perf_mode: mq
    when: ansible_processor_vcpus <= 4

  - name: set perf_mode for 5 to 8 cores
    set_fact:
      perf_mode: "sq"
    when: ansible_processor_vcpus > 4 and ansible_processor_vcpus <= 8

  - name: set perf_mode for 9+ cores
    set_fact:
      perf_mode: "sq_split"
    when: ansible_processor_vcpus > 8

  - name: find perftune in the system
    shell: |
      if [ -f /usr/lib/scylla/perftune.py ]; then echo non-reloc; fi
      if [ -f /opt/scylladb/scripts/perftune.py ]; then echo reloc; fi
    register: is_reloc

  - name: upload hex2list.py to /tmp
    copy:
      src: files/hex2list.py
      dest: /tmp/hex2list.py
      mode: '755'

  - name: set perftune command for reloc
    set_fact:
      perftune: "PATH=$PATH:/opt/scylladb/bin /opt/scylladb/scripts/perftune.py --tune net --get-cpu-mask --nic {{ scylla_nic }} --mode {{ perf_mode }} | /tmp/hex2list.py"
    when: is_reloc.stdout == 'reloc'

  - name: set perftune command for non-reloc
    set_fact:
      perftune: "/usr/lib/scylla/perftune.py --tune net --get-cpu-mask --nic {{ scylla_nic }} --mode {{ perf_mode }} | /tmp/hex2list.py"
    when: is_reloc.stdout == 'non-reloc'

  - name: set cpuset command
    set_fact:
      cpuset: "scylla_cpuset_setup --cpuset `{{ perftune }}`"

  - name: run cpuset
    shell: |
      {{ cpuset }}
    become: true
    when: skip_cpuset is defined and skip_cpuset|bool == false

- name: configure custom scylla.yaml paramaters
  lineinfile:
    path: /etc/scylla/scylla.yaml
    regexp: '^{{ item.key }}'
    line: "{{ item.key }}: {{ item.value }}"
    create: yes
  become: true
  loop: "{{ lookup('dict', scylla_yaml_params) }}"

- name: enable ssl options
  include_tasks: ssl.yml
  when:
    - scylla_ssl is defined
    - (scylla_ssl.internode.enabled|bool) or
      (scylla_ssl.client.enabled|bool)

- name: start_scylla_service dependent tasks
  block:
    - name: start scylla seeds
      service:
        name: scylla-server
        state: started
      become: true
      when: vars['ansible_'~scylla_nic].ipv4.address in scylla_seeds or inventory_hostname in scylla_seeds
      ignore_errors: true
      #TODO: remove ignore_errors when ansible is bumped to 2.10.4 or 2.9.16 as per https://github.com/ansible/ansible/issues/71528

    - name: start scylla non-seeds
      service:
        name: scylla-server
        state: started
      become: true
      when:
        - vars['ansible_'~scylla_nic].ipv4.address not in scylla_seeds
        - inventory_hostname not in scylla_seeds
      ignore_errors: true
      #TODO: remove ignore_errors when ansible is bumped to 2.10.4 or 2.9.16 as per https://github.com/ansible/ansible/issues/71528

    - name: wait for the API port to come up on all nodes
      wait_for:
        port: "{{ scylla_api_port }}"
        host: "{{ scylla_api_address }}"
        timeout: 300

    - name: wait for the cluster to become healthy
      shell: |
        nodetool status|grep -E '^UN|^UJ|^DN'|wc -l
      register: node_count
      until: node_count.stdout|int == ansible_play_batch|length
      retries: 300
      delay: 1
      when: full_inventory|bool

    - name: check API access
      shell: |
        curl -XGET http://{{ scylla_api_address }}:{{ scylla_api_port }}/failure_detector/endpoints/

    - name: generate monitoring configuration
      include_tasks: monitoring_config.yml
      when: generate_monitoring_config|bool
      run_once: true

    - name: configure the Manager agents
      include_tasks: manager_agents.yml
      when: scylla_manager_enabled|bool
  when:  start_scylla_service is defined and start_scylla_service|bool

- name: Update sysctl
  lineinfile:
    path: /etc/sysctl.conf
    line: "{{ item.name }} = {{ item.value }}"
    regexp: '^{{ item.name }}'
    state: present
    create: yes
  become: true
  loop: "{{ sysctl }}"
  when: update_sysctl|bool is defined and update_sysctl|bool

- name: Reload sysctl
  shell: |
    sysctl -p
  become: true
  when: update_sysctl|bool is defined and update_sysctl|bool

