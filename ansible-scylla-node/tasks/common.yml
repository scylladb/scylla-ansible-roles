---

- name: Deactivate firewall
  block:
    - name: Deactivate front-end firewall services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - firewalld.service
        - iptables_services.service
        - ufw.service
      when: ansible_facts.services[item] is defined
    - name: Flush all iptables rules
      iptables:
        flush: yes
      when: "'iptables' in ansible_facts.packages"
  when: not firewall_enabled
  become: true

- name: configure RAID via Scylla-setup
  block:
    - name: check for current raid
      shell: |
        lsblk | grep -w "/var/lib/scylla" | wc -l
      register: present_scylla_disks

    - name: run raid setup if there is no scylla mount yet
      shell: |
        scylla_raid_setup --disks "{{ scylla_raid_setup | join(',') }}" --update-fstab
      become: true
      when: scylla_raid_setup is defined and scylla_raid_setup|length > 0 and present_scylla_disks.stdout|int == 0

# Resulting map -> {'dc1': [node1, node2, node3], 'dc2': [node4, node5, node6]}
- name: Create a map from dc to its list of nodes
  set_fact:
    dc_to_node_list: "{{ dc_to_node_list | default({}) | combine( {hostvars[item]['dc']: (dc_to_node_list | default({}))[hostvars[item]['dc']] | default([]) + [item]} ) }}"
  loop: "{{ groups['scylla'] }}"
  run_once: true
  when: scylla_io_probe_dc_aware|bool

- name: Collect IO settings for the first node of every DC
  block:
    - name: check for existing io_properties
      stat:
        path: /etc/scylla.d/io_properties.yaml
      register: io_prop_stat

    - name: Measure IO settings on one node
      shell: |
        scylla_io_setup
      when: io_prop_stat.stat.exists|bool == False

    - name: store /etc/scylla.d/io_properties.yaml
      shell: |
        cat /etc/scylla.d/io_properties.yaml
      register: _io_properties

    - set_fact:
        io_properties: "{{ _io_properties.stdout }}"

    - name: store /etc/scylla.d/io.conf
      shell: |
        cat /etc/scylla.d/io.conf
      register: _io_conf

    - set_fact:
        io_conf: "{{ _io_conf.stdout_lines[0] }}"
  when: scylla_io_probe|bool == True and (scylla_io_probe_dc_aware|bool == False or dc_to_node_list[dc][0] == inventory_hostname)
  run_once: "{{ not scylla_io_probe_dc_aware|bool }}"
  become: true

- name: For every node, check if io.conf already exists
  stat:
    path: /etc/scylla.d/io.conf
  register: _io_conf_file

- name: Set io.conf
  lineinfile:
    path: /etc/scylla.d/io.conf
    regexp: '^SEASTAR_IO='
    line: "{% if scylla_io_probe|bool and scylla_io_probe_dc_aware|bool %}{{ hostvars[dc_to_node_list[dc][0]]['io_conf'] }}{% else %}{{ io_conf }}{% endif %}"
    create: yes
  become: true
  when: io_conf is defined

- name: For every node, check if io_properties.yaml already exists
  stat:
    path: /etc/scylla.d/io_properties.yaml
  register: _io_properties_file

- name: Set io_properties
  template:
    src: templates/io_properties.yaml.j2
    dest: /etc/scylla.d/io_properties.yaml
    owner: root
    group: root
    mode: '0644'
  become: true
  when: _io_properties_file.stat.exists|bool == false or always_replace_io_properties|bool

- name: configure NTP
  shell: |
    scylla_ntp_setup
  become: true
  when: skip_ntp is defined and skip_ntp|bool == false

- name: node exporter setup
  shell: |
    node_exporter_install --force
  when: install_type == 'online'
  become: true
  notify:
    - node_exporter start
  ignore_errors: true
  #TODO: stop ignoring errors when the node_exporter_install script fix is available in all actual versions, resp. use only for < 5.0 / 2022

- name: node exporter setup from 5.0/2022
  service:
        name: scylla-node-exporter
        state: started
  become: true
  ignore_errors: true
  #TODO: stop ignoring errors when a version check is added

- name: configure Scylla
  shell: |
    scylla_setup --no-raid-setup --nic {{ scylla_nic }} --setup-nic-and-disks --no-ec2-check --no-kernel-check --no-ntp-setup --no-io-setup --no-node-exporter --no-coredump-setup --no-sysconfig-setup --no-swap-setup
  become: true
  when: ansible_facts.services["scylla-server.service"] is defined and ansible_facts.services["scylla-server.service"]["state"] != "running"

- name: configure scylla.yaml
  template:
    src: templates/scylla.yaml.j2
    dest: /etc/scylla/scylla.yaml
    owner: root
    group: root
    mode: '0644'
  become: true

- name: configure cassandra-rackdc.properties
  template:
    src: templates/cassandra-rackdc.properties.j2
    dest: /etc/scylla/cassandra-rackdc.properties
    owner: root
    group: root
    mode: '0644'
  become: true
  when: scylla_snitch != 'SimpleSnitch' and scylla_snitch != 'RackInferringSnitch'

- name: finalize Scylla node configuration
  block:
  - name: run bootparam setup
    shell: |
      scylla_bootparam_setup

  - name: set up coredump
    shell: |
      scylla_coredump_setup --dump-to-raiddir
    when: skip_coredump is defined and skip_coredump|bool == false

  - name: set up swap
    shell: |
      scylla_swap_setup{% if swap_file_size_mb is defined and swap_file_size_mb|int > 0 %} --swap-size {{ [swap_file_size_mb|int, 1024]|max // 1024 }} {% endif %}
    register: swap_setup
    failed_when:
    - swap_setup.rc > 0
    - '"swap already configured, exiting setup" not in swap_setup.stdout'
    when: skip_swap is defined and skip_swap|bool == false

  - name: configure cpu scaling
    shell: |
      scylla_cpuscaling_setup

  - name: configure fstrim
    shell: |
      scylla_fstrim_setup

  - name: configure sysconfig
    shell: |
      scylla_sysconfig_setup --setup-nic-and-disks --nic {{ scylla_nic }}
    when: skip_sysconfig is defined and skip_sysconfig|bool == false
  become: true

- name: perftune related operations
  block:
  #TODO: additional testing on Debian/Ubuntu required.
  - name: set perf_mode for 4 cores or less
    set_fact:
      perf_mode: mq
    when: ansible_processor_vcpus <= 4

  - name: set perf_mode for 5 to 8 cores
    set_fact:
      perf_mode: "sq"
    when: ansible_processor_vcpus > 4 and ansible_processor_vcpus <= 8

  - name: set perf_mode for 9+ cores
    set_fact:
      perf_mode: "sq_split"
    when: ansible_processor_vcpus > 8

  - name: find perftune in the system
    shell: |
      if [ -f /usr/lib/scylla/perftune.py ]; then echo non-reloc; fi
      if [ -f /opt/scylladb/scripts/perftune.py ]; then echo reloc; fi
    register: is_reloc

  - name: upload hex2list.py to /tmp
    copy:
      src: files/hex2list.py
      dest: /tmp/hex2list.py
      mode: '755'

  - name: set perftune command for reloc
    set_fact:
      perftune: "PATH=$PATH:/opt/scylladb/bin /opt/scylladb/scripts/perftune.py --tune net --get-cpu-mask --nic {{ scylla_nic }} --mode {{ perf_mode }} | /tmp/hex2list.py"
    when: is_reloc.stdout == 'reloc'

  - name: set perftune command for non-reloc
    set_fact:
      perftune: "/usr/lib/scylla/perftune.py --tune net --get-cpu-mask --nic {{ scylla_nic }} --mode {{ perf_mode }} | /tmp/hex2list.py"
    when: is_reloc.stdout == 'non-reloc'

  - name: set default cpuset command
    set_fact:
      cpuset_default: "scylla_cpuset_setup --cpuset `{{ perftune }}`"

  - name: determine cpuset command (custom or default)
    set_fact:
      cpuset: "{{ (cpuset_command is defined) | ternary(cpuset_command, cpuset_default) }}"

  - name: run cpuset
    shell: |
      {{ cpuset }}
    become: true
    when: skip_cpuset is defined and skip_cpuset|bool == false

  - name: set devmode command
    set_fact:
      devmode_command: "scylla_dev_mode_setup --developer-mode 1"

  - name: run devmode
    shell: |
      {{ devmode_command }}
    become: true
    when: (devmode is defined) and (devmode|bool)

- name: configure custom scylla.yaml paramaters
  lineinfile:
    path: /etc/scylla/scylla.yaml
    regexp: '^{{ item.key }}'
    line: "{{ item.key }}: {{ item.value }}"
    create: yes
  become: true
  loop: "{{ lookup('dict', scylla_yaml_params) }}"

- name: enable ssl options
  include_tasks: ssl.yml
  when:
    - scylla_ssl is defined
    - (scylla_ssl.internode.enabled|bool) or
      (scylla_ssl.client.enabled|bool)

# scylla_listen_address is a composite indirect value that depends on another per-host value - scylla_nic.
# Therefore in order to be able to get the corresponding value via hostvars[item] later in the play we need to
# have an actual value resolved.
# One way to do that is to resolve it and store as an Ansible fact.
- name: Resolve a scylla_listen_address as a fact
  set_fact:
    listen_address: "{{ scylla_listen_address }}"

# The same relates to the below
- name: Resolve scylla_broadcast_address
  set_fact:
    broadcast_address: "{{ scylla_broadcast_address }}"

- name: start_scylla_service dependent tasks
  block:
    - name: Generate tokens for the new nodes
      run_once: true
      include_tasks: generate_tokens.yml
      when: token_distributor is defined

    # Start all seeders together since we don't know which one is the "first" - so let them figure it by themselves
    - name: start scylla on seeders
      service:
        name: scylla-server
        state: started
      become: true
      when: broadcast_address in scylla_seeds or inventory_hostname in scylla_seeds

    - name: Wait for CQL port on seeders
      wait_for:
        port: 9042
        host: "{{ listen_address }}"
        timeout: "{{ scylla_bootstrap_wait_time_sec }}"
      when: broadcast_address in scylla_seeds or inventory_hostname in scylla_seeds

    - name: Start scylla non-seeds nodes serially
      run_once: true
      include_tasks: start_one_node.yml
      loop: "{{ groups['scylla'] }}"
      when:
        - item not in scylla_seeds
        - hostvars[item]['broadcast_address'] not in scylla_seeds

    - name: wait for the API port to come up on all nodes
      wait_for:
        port: "{{ scylla_api_port }}"
        host: "{{ scylla_api_address }}"
        timeout: 300

    - name: wait for the cluster to become healthy
      shell: |
        nodetool status|grep -E '^UN|^UJ|^DN'|wc -l
      register: node_count
      until: node_count.stdout|int == ansible_play_batch|length
      retries: 300
      delay: 1
      when: full_inventory|bool

    - name: check API access
      uri:
        url: "http://{{ scylla_api_address }}:{{ scylla_api_port }}/failure_detector/endpoints/"
        follow_redirects: none
        method: GET
      register: _result
      until: _result.status == 200
      retries: 90
      delay: 1

    - name: Delete initial_token in scylla.yaml
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^initial_token:'
        line: ""
      become: true
      when: token_distributor is defined
  when: start_scylla_service is defined and start_scylla_service|bool

- name: Check if authentication and audit are enabled
  block:
    - command: cat /etc/scylla/scylla.yaml
      ignore_errors: true
      register: _scylla_yaml_out

    - set_fact:
        _scylla_yaml_map: "{{ _scylla_yaml_out.stdout | from_yaml }}"

    - set_fact:
        _authentication_enabled: |
          {% if (_scylla_yaml_map.authenticator is defined and (_scylla_yaml_map.authenticator == 'TransitionalAuthenticator' or _scylla_yaml_map.authenticator == 'PasswordAuthenticator')) or
          (_scylla_yaml_map.authorizer is defined and (_scylla_yaml_map.authorizer == 'TransitionalAuthorizer' or _scylla_yaml_map.authorizer == 'CassandraAuthorizer')) %}True{% else %}False{% endif %}
        _audit_enabled: |
          {% if (_scylla_yaml_map.audit is defined and _scylla_yaml_map.audit == 'table') %}True{% else %}False{% endif %}
  run_once: true

- name: Adjust replication for system_auth keyspace
  include_tasks: adjust_keyspace_replication.yml
  vars:
    _keyspace: "system_auth"
    _keyspace_replication_strategy: "{{ system_auth_replication_strategy }}"
    _keyspace_rf: "{{ system_auth_rf }}"
  when:
    - adjust_system_auth_replication is defined and adjust_system_auth_replication|bool
    - _authentication_enabled is defined and _authentication_enabled|bool
    - system_auth_rf is defined and system_auth_replication_strategy is defined

- name: Adjust replication for audit keyspace
  include_tasks: adjust_keyspace_replication.yml
  vars:
    _keyspace: "audit"
    _keyspace_replication_strategy: "{{ audit_replication_strategy }}"
    _keyspace_rf: "{{ audit_rf }}"
  when:
    - adjust_audit_replication is defined and adjust_audit_replication|bool
    - _audit_enabled is defined and _audit_enabled|bool
    - audit_rf is defined and audit_replication_strategy is defined

- name: generate monitoring configuration
  include_tasks: monitoring_config.yml
  when: generate_monitoring_config|bool
  run_once: true

- name: configure the Manager agents
  include_tasks: manager_agents.yml
  when: scylla_manager_enabled|bool

- name: Update sysctl
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  become: true
  loop: "{{ sysctl }}"
  ignore_errors: true
  when: update_sysctl|bool is defined and update_sysctl|bool

