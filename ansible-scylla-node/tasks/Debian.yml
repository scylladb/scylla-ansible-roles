---
- name: add Scylla repos
  block:
  - name: Install gnupg2 dependency
    apt:
      name: "gnupg2"
      state: present
      update_cache: yes
    when: install_type == 'online' and scylla_repo_keyserver is defined and scylla_repo_keys is defined and (scylla_repo_keys|length > 0)

  - name: Add an apt key by id from a keyserver
    apt_key:
      keyserver: "{{ scylla_repo_keyserver }}"
      id: "{{ item }}"
      state: present
    with_items: "{{ scylla_repo_keys }}"
    when: install_type == 'online' and scylla_repo_keyserver is defined and scylla_repo_keys is defined and (scylla_repo_keys|length > 0)

  - name: Add an Apt signing key for Debian
    apt_key:
      url: "{{ item }}"
      state: present
    with_items: "{{ scylla_repo_keyfile_urls }}"
    when: scylla_repo_keyfile_urls is defined and (scylla_repo_keyfile_urls|length > 0)

  - name: Install Scylla repo
    get_url:
      url: "{{ item }}"
      dest: '/etc/apt/sources.list.d/{{ item.split("/")[-1] | lower }}'
      mode: '0644'
      owner: root
    with_items: "{{ scylla_deb_repos }}"
    when: install_type == 'online' and item.split(".")[-1] == "list"

  become: true

- name: Install Scylla
  block:
  - name: Run "apt-get update"
    apt:
      update_cache: yes

  - name: Install additional dependencies
    apt:
      name: "{{ scylla_dependencies }}"
      state: present
      force_apt_get: yes
    when: scylla_dependencies is defined and (scylla_dependencies|length > 0)

  - name: Install Java
    apt:
      name: openjdk-8-jre-headless
      state: present
      force_apt_get: yes

  - name: Correct java version selected
    alternatives:
      name: java
      path: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java

  - name: Install latest OSS Scylla
    apt:
      name: scylla
      state: latest
    when: scylla_version == 'latest' and scylla_edition == 'oss'

  - name: Install latest Enterprise Scylla
    apt:
      name: scylla-enterprise
      state: latest
    when: scylla_version == 'latest' and scylla_edition == 'enterprise'

  - name: Set Scylla {{ scylla_edition }} prefix
    set_fact:
      scylla_package_prefix: "scylla"
    when: scylla_version != 'latest' and scylla_edition == 'oss'

  - name: Set Scylla {{ scylla_edition }} prefix
    set_fact:
      scylla_package_prefix: "scylla-enterprise"
    when: scylla_version != 'latest' and scylla_edition == 'enterprise'

  - name: Figure out exact Scylla version
    block:
    - name: Get versions of {{ scylla_package_prefix }} package
      shell: apt list -a {{ scylla_package_prefix }} | egrep "{{ scylla_version }}[\-]?"
      register: aptversions

    - name: Search for version of {{ scylla_package_prefix }} package
      set_fact:
        tempsversion: "{{ aptversions.stdout | regex_findall(regexp) }}"
      vars:
        regexp: ' ([0-9\.]+)-([a-f0-9\.]+)-([0-9]) '

    - name: Set {{ scylla_package_prefix }} version if only one version found
      set_fact:
        sversion: "{{ tempsversion }}"
      when: tempsversion | length == 1

    - name: Error out, wrong Scylla version was passed(more than a single or none version matches), please fix it!"
      ansible.builtin.command: /bin/false
      when: tempsversion | length != 1

    - name: Set Scylla Full version
      set_fact:
        scylla_full_version: "{{ sversion }}"
    when: scylla_version != 'latest'

  - name: Install specified {{ scylla_package_prefix }} Scylla
    block:
    - name: Create package version pin file
      template:
        src: templates/apt-pin-file.j2
        dest: "/etc/apt/preferences.d/99{{ scylla_package_prefix }}"
        owner: root
        group: root
        mode: '0644'
    - name: Install Scylla
      apt:
        name: "{{ scylla_package_prefix }}={{ scylla_version }}*" # use {{ scylla_full_version[0][0] }}-{{ scylla_full_version[0][1] }}-{{ scylla_full_version[0][2] }} here ?
        state: present
        allow_downgrade: yes
    when: scylla_version != 'latest'

  become: true

# TODO: Implement this for the debian based distros
# - name: install prerequisite python-yaml
#   shell: |
#     for i in `yum search python3|grep -i pyyaml|awk '{ print $1 }'`; do sudo yum -y install $i; done
#   become: true

- name: install and configure Scylla Manager Agent
  block:
    - name: Add an apt key by id from a keyserver
      apt_key:
        keyserver: "{{ scylla_repo_keyserver }}"
        id: "{{ item }}"
        state: present
      with_items: "{{ scylla_manager_repo_keys }}"
      when: install_type == 'online' and scylla_repo_keyserver is defined and scylla_manager_repo_keys is defined and (scylla_manager_repo_keys|length > 0)
      become: true

    - name: add Scylla Manager repo
      get_url:
        url: "{{ scylla_manager_deb_repo_url }}"
        dest: '/etc/apt/sources.list.d/{{ scylla_manager_deb_repo_url.split("/")[-1] | lower }}'
        mode: '0644'
        owner: root
      when: scylla_manager_deb_repo_url.split(".")[-1] == "list"

    - name: Run "apt-get update"
      apt:
        update_cache: yes

    - name: install the manager agent
      apt:
        name: scylla-manager-agent
        state: present
      when: (scylla_manager_agent_upgrade is not defined) or (scylla_manager_agent_upgrade|bool == False)

    - name: install the latest manager agent
      apt:
        name: scylla-manager-agent
        state: present
      notify: scylla-manager-agent restart
      when: scylla_manager_agent_upgrade is defined and scylla_manager_agent_upgrade|bool

  become: true
  when: scylla_manager_enabled|bool == true

- name: install XFSprogs
  apt:
    name: xfsprogs
    state: present
  become: true
